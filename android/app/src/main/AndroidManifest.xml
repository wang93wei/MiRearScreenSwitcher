<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <!-- Shizuku权限（关键！） -->
    <uses-permission android:name="moe.shizuku.manager.permission.API_V23"/>
    <!-- 唤醒锁权限 -->
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <!-- Overlay权限（用于保持背屏常亮Activity可见 + 录屏悬浮窗） -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
    <!-- 录屏权限（Android 10+可能需要） -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="28" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32" />
    <!-- 前台服务权限 (Android 9+) -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <!-- 前台服务类型：特殊用途 (Android 14+) -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_SPECIAL_USE"/>
    <!-- 通知权限 (Android 13+) -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
    <!-- 查询所有应用包权限 (Android 11+，用于通知功能选择应用) -->
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"/>
    
    <application
        android:label="MRSS"
        android:name=".MyApplication"
        android:icon="@mipmap/ic_launcher">
        <!-- 🔑 关键：背屏准入证！已验证有效！ -->
        <meta-data
            android:name="miui.rear.policy"
            android:value="1"/>
            
        <!-- Shizuku Provider（重要！） -->
        <provider
            android:name="rikka.shizuku.ShizukuProvider"
            android:authorities="com.tgwgroup.MiRearScreenSwitcher.shizuku"
            android:multiprocess="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INTERACT_ACROSS_USERS_FULL" />
        
        <!-- 自定义Shizuku Service -->
        <service
            android:name=".TaskService"
            android:permission="moe.shizuku.manager.permission.API_V23"
            android:exported="true" />
        
        <!-- Quick Settings Tile - 切换至背屏 -->
        <service
            android:name=".SwitchToRearTileService"
            android:icon="@drawable/ic_tile_switch_display"
            android:label="@string/tile_label"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        
        <!-- Quick Settings Tile - 获取背屏截图 -->
        <service
            android:name=".RearScreenshotTileService"
            android:icon="@drawable/ic_tile_screenshot"
            android:label="@string/tile_screenshot_label"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        
        <!-- V2.7: Quick Settings Tile - 背屏录屏 -->
        <service
            android:name=".RearScreenRecordTileService"
            android:icon="@drawable/ic_tile_record"
            android:label="@string/tile_record_label"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>
        
        <!-- 监听背屏状态和系统屏幕状态广播接收器 -->
        <receiver
            android:name=".RearScreenBroadcastReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="miui.intent.action.SUB_SCREEN_ON"/>
                <action android:name="miui.intent.action.SUB_SCREEN_OFF"/>
                <action android:name="android.intent.action.SCREEN_ON"/>
                <action android:name="android.intent.action.SCREEN_OFF"/>
            </intent-filter>
        </receiver>
        
        <!-- 前台Service - 背屏漫游服务 -->
        <service
            android:name=".RearScreenKeeperService"
            android:enabled="true"
            android:exported="false"
            android:foregroundServiceType="specialUse">
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="背屏漫游服务"/>
        </service>
        
        <!-- V2.3: 充电动画服务 -->
        <service
            android:name=".ChargingService"
            android:enabled="true"
            android:exported="false"
            android:foregroundServiceType="specialUse">
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="充电动画服务"/>
        </service>
        
        <!-- V3.5: 未投放应用时常亮服务 -->
        <service
            android:name=".AlwaysWakeUpService"
            android:enabled="true"
            android:exported="false"
            android:foregroundServiceType="specialUse">
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="持续唤醒背屏服务"/>
        </service>
        
        <!-- V2.4: 通知监听服务 -->
        <service
            android:name=".NotificationService"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"
            android:foregroundServiceType="specialUse">
            <intent-filter>
                <action android:name="android.service.notification.NotificationListenerService"/>
            </intent-filter>
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="背屏通知服务"/>
        </service>
        
        <!-- V2.6: URI命令处理服务（后台执行） -->
        <service
            android:name=".UriCommandService"
            android:enabled="true"
            android:exported="false"/>
        
        <!-- V2.7: 背屏录屏服务（前台Service+悬浮窗） -->
        <service
            android:name=".ScreenRecordService"
            android:enabled="true"
            android:exported="false"
            android:foregroundServiceType="specialUse">
            <property
                android:name="android.app.PROPERTY_SPECIAL_USE_FGS_SUBTYPE"
                android:value="背屏录屏服务"/>
        </service>

        
        <!-- 背屏唤醒Activity（已废弃，改用Service） -->
        <activity
            android:name=".RearScreenWakeActivity"
            android:exported="true"
            android:theme="@style/Theme.Transparent"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.tgwgroup.MiRearScreenSwitcher.rear"
            android:screenOrientation="portrait"
            android:configChanges="orientation|screenSize|keyboardHidden" />
            
        <!-- 背屏点亮Activity（参考MiRearScreenNotification） -->
        <activity
            android:name=".RearScreenWakeupActivity"
            android:exported="true"
            android:theme="@style/Theme.Transparent"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.tgwgroup.MiRearScreenSwitcher.wakeup">
            <meta-data android:name="miui.rear.policy" android:value="miui"/>
        </activity>
        
        <!-- V2.3: 背屏充电动画Activity -->
        <activity
            android:name=".RearScreenChargingActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.tgwgroup.MiRearScreenSwitcher.charging"
            android:theme="@style/Theme.Transparent"
            android:configChanges="orientation|screenSize|keyboardHidden|screenLayout|uiMode|smallestScreenSize|density"
            android:directBootAware="true"
            android:showWhenLocked="true"
            android:turnScreenOn="true"
            android:hardwareAccelerated="true">
            <meta-data android:name="miui.rear.policy" android:value="miui"/>
        </activity>
        
        <!-- V2.4: 背屏通知显示Activity -->
        <activity
            android:name=".RearScreenNotificationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.tgwgroup.MiRearScreenSwitcher.notification"
            android:theme="@style/Theme.Transparent"
            android:configChanges="orientation|screenSize|keyboardHidden|screenLayout|uiMode|smallestScreenSize|density"
            android:directBootAware="true"
            android:showWhenLocked="true"
            android:turnScreenOn="true">
            <meta-data android:name="miui.rear.policy" android:value="miui"/>
        </activity>
            
        <!-- V2.6: URI接收Activity（透明，立即转发） -->
        <activity
            android:name=".UriReceiverActivity"
            android:exported="true"
            android:theme="@style/Theme.Transparent"
            android:excludeFromRecents="true"
            android:launchMode="singleInstance"
            android:taskAffinity="com.tgwgroup.MiRearScreenSwitcher.uri">
            <intent-filter>
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <data android:scheme="mrss"/>
            </intent-filter>
        </activity>
        
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:excludeFromRecents="true"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
        
        <!-- 卸载确认对话框的标题和内容 -->
        <meta-data
            android:name="app_description_title"
            android:value="@string/uninstall_title" />
        <meta-data
            android:name="app_description_content"
            android:value="@string/uninstall_content" />
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
